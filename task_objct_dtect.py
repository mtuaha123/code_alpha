# -*- coding: utf-8 -*-
"""task_objct_dtect.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1tlQa_2dja3tGqLQnPHigTzQc6IFXyKoq
"""

!pip install opencv-python-headless
!git clone https://github.com/ultralytics/yolov5
!pip install -r yolov5/requirements.txt

from google.colab import files
uploaded = files.upload()

video_path = 'bandicam 2024-09-03 12-33-24-311.mp4'  # The exact file name from the upload
print("Uploaded video file path:", video_path)

import torch
import cv2
import numpy as np
from yolov5 import utils

model = torch.hub.load('ultralytics/yolov5', 'yolov5s', pretrained=True)

cap = cv2.VideoCapture(video_path)

from google.colab.patches import cv2_imshow # Import the cv2_imshow function from google.colab.patches
while cap.isOpened():
    ret, frame = cap.read()
    if not ret:
        print("End of video or failed to grab frame")
        break

    # Run YOLOv5 inference on the frame
    results = model(frame)

    # Render the results (bounding boxes, labels, etc.)
    rendered_frame = np.squeeze(results.render())

    # Display the frame with detected objects
    cv2_imshow(rendered_frame)
    # Break the loop on 'q' key press
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

cap.release()
cv2.destroyAllWindows()